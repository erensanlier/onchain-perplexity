version: '3.8'

# To start the services: docker-compose up -d
# To stop the services: docker-compose down
# To access PostgreSQL: psql postgresql://postgres:postgres@localhost:5432/onchain_perplexity
# Cryo MCP API will be available at: http://localhost:8000
# Next.js app will be available at: http://localhost:3000

services:
  postgres:
    image: postgres:16
    container_name: onchain-perplexity-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: onchain_perplexity
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    image: nikolaik/python-nodejs:python3.11-nodejs20
    container_name: onchain-perplexity-app
    working_dir: /app
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - POSTGRES_URL=postgres://postgres:postgres@postgres:5432/onchain_perplexity
      - AUTH_SECRET=${AUTH_SECRET}
      - XAI_API_KEY=${XAI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - BLOB_READ_WRITE_TOKEN=${BLOB_READ_WRITE_TOKEN}
      - ETH_RPC_URL=${ETH_RPC_URL:-https://gateway.tenderly.co/public/mainnet}
    command: >
      bash -c "cd cryo-mcp && 
               pip install uv && 
               uv pip install --system -e . && 
               cd .. && 
               # Install Rust and Cryo
               curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && 
               . "/root/.cargo/env" &&
               cargo install cryo_cli
               corepack enable && 
               corepack prepare pnpm@9.12.3 --activate && 
               pnpm install && 
               pnpm run db:migrate && 
               pnpm run dev"
    ports:
      - "3000:3000"
    depends_on:
      - postgres

volumes:
  postgres_data:
  cryo_data:
  node_modules:

    # Environment variables are loaded from .env
    # Run with: docker-compose up -d
